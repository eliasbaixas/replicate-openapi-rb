=begin
#Replicate HTTP API

#A web service for running Replicate models

The version of the OpenAPI document: 1.0.0-a1
Contact: team@replicate.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.1.0

=end

require 'spec_helper'
require 'json'

# Unit tests for Replicate::DefaultApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'DefaultApi' do
  before do
    # run before each test
    @api_instance = Replicate::DefaultApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DefaultApi' do
    it 'should create an instance of DefaultApi' do
      expect(@api_instance).to be_instance_of(Replicate::DefaultApi)
    end
  end

  # unit tests for collections_get
  # Get a collection of models
  # Example cURL request:  &#x60;&#x60;&#x60;console curl -s \\   -H \&quot;Authorization: Token &lt;paste-your-token-here&gt;\&quot; \\   https://api.replicate.com/v1/collections/super-resolution &#x60;&#x60;&#x60;  The response will be a collection object with a nested list of the models in that collection:  &#x60;&#x60;&#x60;json {   \&quot;name\&quot;: \&quot;Super resolution\&quot;,   \&quot;slug\&quot;: \&quot;super-resolution\&quot;,   \&quot;description\&quot;: \&quot;Upscaling models that create high-quality images from low-quality images.\&quot;,   \&quot;models\&quot;: [...] } &#x60;&#x60;&#x60; 
  # @param collection_slug The slug of the collection, like &#x60;super-resolution&#x60; or &#x60;image-restoration&#x60;. See [replicate.com/collections](https://replicate.com/collections). 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'collections_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for collections_list
  # List collections of models
  # Example cURL request:  &#x60;&#x60;&#x60;console curl -s \\   -H \&quot;Authorization: Token &lt;paste-your-token-here&gt;\&quot; \\   https://api.replicate.com/v1/collections &#x60;&#x60;&#x60;  The response will be a paginated JSON list of collection objects:  &#x60;&#x60;&#x60;json {   \&quot;next\&quot;: \&quot;null\&quot;,   \&quot;previous\&quot;: null,   \&quot;results\&quot;: [     {       \&quot;name\&quot;: \&quot;Super resolution\&quot;,       \&quot;slug\&quot;: \&quot;super-resolution\&quot;,       \&quot;description\&quot;: \&quot;Upscaling models that create high-quality images from low-quality images.\&quot;     }   ] } &#x60;&#x60;&#x60; 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'collections_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for hardware_list
  # List available hardware for models
  # Example cURL request:  &#x60;&#x60;&#x60;console curl -s \\   -H \&quot;Authorization: Token &lt;paste-your-token-here&gt;\&quot; \\   https://api.replicate.com/v1/hardware &#x60;&#x60;&#x60;  The response will be a JSON array of hardware objects:  &#x60;&#x60;&#x60;json [     {\&quot;name\&quot;: \&quot;CPU\&quot;, \&quot;sku\&quot;: \&quot;cpu\&quot;},     {\&quot;name\&quot;: \&quot;Nvidia T4 GPU\&quot;, \&quot;sku\&quot;: \&quot;gpu-t4\&quot;},     {\&quot;name\&quot;: \&quot;Nvidia A40 GPU\&quot;, \&quot;sku\&quot;: \&quot;gpu-a40-small\&quot;},     {\&quot;name\&quot;: \&quot;Nvidia A40 (Large) GPU\&quot;, \&quot;sku\&quot;: \&quot;gpu-a40-large\&quot;}, ] &#x60;&#x60;&#x60; 
  # @param [Hash] opts the optional parameters
  # @return [Array<HardwareList200ResponseInner>]
  describe 'hardware_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for models_create
  # Create a model
  # Create a model.  Example cURL request:  &#x60;&#x60;&#x60;console curl -s -X POST \\   -H \&quot;Authorization: Token &lt;paste-your-token-here&gt;\&quot; \\   -d &#39;{\&quot;owner\&quot;: \&quot;alice\&quot; \&quot;name\&quot;: \&quot;my-model\&quot;, \&quot;description\&quot;: \&quot;An example model\&quot;, \&quot;visibility\&quot;: \&quot;public\&quot;, \&quot;hardware\&quot;: \&quot;cpu\&quot;}&#39; \\   https://api.replicate.com/v1/models &#x60;&#x60;&#x60;  The response will be a model object in the following format:  &#x60;&#x60;&#x60;json {   \&quot;url\&quot;: \&quot;https://replicate.com/alice/my-model\&quot;,   \&quot;owner\&quot;: \&quot;alice\&quot;,   \&quot;name\&quot;: \&quot;my-model\&quot;,   \&quot;description\&quot;: \&quot;An example model\&quot;,   \&quot;visibility\&quot;: \&quot;public\&quot;,   \&quot;github_url\&quot;: null,   \&quot;paper_url\&quot;: null,   \&quot;license_url\&quot;: null,   \&quot;run_count\&quot;: 0,   \&quot;cover_image_url\&quot;: null,   \&quot;default_example\&quot;: null,   \&quot;latest_version\&quot;: null, } &#x60;&#x60;&#x60; 
  # @param models_create_request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'models_create test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for models_get
  # Get a model
  # Example cURL request:  &#x60;&#x60;&#x60;console curl -s \\   -H \&quot;Authorization: Token &lt;paste-your-token-here&gt;\&quot; \\   https://api.replicate.com/v1/models/replicate/hello-world &#x60;&#x60;&#x60;  The response will be a model object in the following format:  &#x60;&#x60;&#x60;json {   \&quot;url\&quot;: \&quot;https://replicate.com/replicate/hello-world\&quot;,   \&quot;owner\&quot;: \&quot;replicate\&quot;,   \&quot;name\&quot;: \&quot;hello-world\&quot;,   \&quot;description\&quot;: \&quot;A tiny model that says hello\&quot;,   \&quot;visibility\&quot;: \&quot;public\&quot;,   \&quot;github_url\&quot;: \&quot;https://github.com/replicate/cog-examples\&quot;,   \&quot;paper_url\&quot;: null,   \&quot;license_url\&quot;: null,   \&quot;run_count\&quot;: 5681081,   \&quot;cover_image_url\&quot;: \&quot;...\&quot;,   \&quot;default_example\&quot;: {...},   \&quot;latest_version\&quot;: {...}, } &#x60;&#x60;&#x60;  The &#x60;cover_image_url&#x60; string is an HTTPS URL for an image file. This can be:  - An image uploaded by the model author. - The output file of the example prediction, if the model author has not set a cover image. - The input file of the example prediction, if the model author has not set a cover image and the example prediction has no output file. - A generic fallback image.  The &#x60;default_example&#x60; object is a [prediction](#predictions.get) created with this model.  The &#x60;latest_version&#x60; object is the model&#39;s most recently pushed [version](#models.versions.get). 
  # @param model_owner The name of the user or organization that owns the model. 
  # @param model_name The name of the model. 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'models_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for models_list
  # List public models
  # Get a paginated list of public models.  Example cURL request:  &#x60;&#x60;&#x60;console curl -s \\   -H \&quot;Authorization: Token &lt;paste-your-token-here&gt;\&quot; \\   https://api.replicate.com/v1/models &#x60;&#x60;&#x60;  The response will be a paginated JSON array of model objects:  &#x60;&#x60;&#x60;json {   \&quot;next\&quot;: null,   \&quot;previous\&quot;: null,   \&quot;results\&quot;: [     {       \&quot;url\&quot;: \&quot;https://replicate.com/replicate/hello-world\&quot;,       \&quot;owner\&quot;: \&quot;replicate\&quot;,       \&quot;name\&quot;: \&quot;hello-world\&quot;,       \&quot;description\&quot;: \&quot;A tiny model that says hello\&quot;,       \&quot;visibility\&quot;: \&quot;public\&quot;,       \&quot;github_url\&quot;: \&quot;https://github.com/replicate/cog-examples\&quot;,       \&quot;paper_url\&quot;: null,       \&quot;license_url\&quot;: null,       \&quot;run_count\&quot;: 5681081,       \&quot;cover_image_url\&quot;: \&quot;...\&quot;,       \&quot;default_example\&quot;: {...},       \&quot;latest_version\&quot;: {...}     }   ] } &#x60;&#x60;&#x60;  The &#x60;cover_image_url&#x60; string is an HTTPS URL for an image file. This can be:  - An image uploaded by the model author. - The output file of the example prediction, if the model author has not set a cover image. - The input file of the example prediction, if the model author has not set a cover image and the example prediction has no output file. - A generic fallback image. 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'models_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for models_versions_delete
  # Delete a model version
  # Delete a model version and all associated predictions, including all output files.  Model version deletion has some restrictions:  - You can only delete versions from models you own. - You can only delete versions from private models. - You cannot delete a version if someone other than you has run predictions with it.  Example cURL request:  &#x60;&#x60;&#x60;command curl -s -X DELETE \\   -H \&quot;Authorization: Token &lt;paste-your-token-here&gt;\&quot; \\   https://api.replicate.com/v1/models/replicate/hello-world/versions/5c7d5dc6dd8bf75c1acaa8565735e7986bc5b66206b55cca93cb72c9bf15ccaa &#x60;&#x60;&#x60;  The response will be an empty 202, indicating the deletion request has been accepted. It might take a few minutes to be processed. 
  # @param model_owner The name of the user or organization that owns the model. 
  # @param model_name The name of the model. 
  # @param version_id The ID of the version. 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'models_versions_delete test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for models_versions_get
  # Get a model version
  # Example cURL request:  &#x60;&#x60;&#x60;console curl -s \\   -H \&quot;Authorization: Token &lt;paste-your-token-here&gt;\&quot; \\   https://api.replicate.com/v1/models/replicate/hello-world/versions/5c7d5dc6dd8bf75c1acaa8565735e7986bc5b66206b55cca93cb72c9bf15ccaa &#x60;&#x60;&#x60;  The response will be the version object:  &#x60;&#x60;&#x60;json {   \&quot;id\&quot;: \&quot;5c7d5dc6dd8bf75c1acaa8565735e7986bc5b66206b55cca93cb72c9bf15ccaa\&quot;,   \&quot;created_at\&quot;: \&quot;2022-04-26T19:29:04.418669Z\&quot;,   \&quot;cog_version\&quot;: \&quot;0.3.0\&quot;,   \&quot;openapi_schema\&quot;: {...} } &#x60;&#x60;&#x60;  Every model describes its inputs and outputs with [OpenAPI Schema Objects](https://spec.openapis.org/oas/latest.html#schemaObject) in the &#x60;openapi_schema&#x60; property.  The &#x60;openapi_schema.components.schemas.Input&#x60; property for the [replicate/hello-world](https://replicate.com/replicate/hello-world) model looks like this:  &#x60;&#x60;&#x60;json {   \&quot;type\&quot;: \&quot;object\&quot;,   \&quot;title\&quot;: \&quot;Input\&quot;,   \&quot;required\&quot;: [     \&quot;text\&quot;   ],   \&quot;properties\&quot;: {     \&quot;text\&quot;: {       \&quot;x-order\&quot;: 0,       \&quot;type\&quot;: \&quot;string\&quot;,       \&quot;title\&quot;: \&quot;Text\&quot;,       \&quot;description\&quot;: \&quot;Text to prefix with &#39;hello &#39;\&quot;     }   } } &#x60;&#x60;&#x60;  The &#x60;openapi_schema.components.schemas.Output&#x60; property for the [replicate/hello-world](https://replicate.com/replicate/hello-world) model looks like this:  &#x60;&#x60;&#x60;json {   \&quot;type\&quot;: \&quot;string\&quot;,   \&quot;title\&quot;: \&quot;Output\&quot; } &#x60;&#x60;&#x60;  For more details, see the docs on [Cog&#39;s supported input and output types](https://github.com/replicate/cog/blob/75b7802219e7cd4cee845e34c4c22139558615d4/docs/python.md#input-and-output-types) 
  # @param model_owner The name of the user or organization that owns the model. 
  # @param model_name The name of the model. 
  # @param version_id The ID of the version. 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'models_versions_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for models_versions_list
  # List model versions
  # Example cURL request:  &#x60;&#x60;&#x60;console curl -s \\   -H \&quot;Authorization: Token &lt;paste-your-token-here&gt;\&quot; \\   https://api.replicate.com/v1/models/replicate/hello-world/versions &#x60;&#x60;&#x60;  The response will be a JSON array of model version objects, sorted with the most recent version first:  &#x60;&#x60;&#x60;json {   \&quot;next\&quot;: null,   \&quot;previous\&quot;: null,   \&quot;results\&quot;: [     {       \&quot;id\&quot;: \&quot;5c7d5dc6dd8bf75c1acaa8565735e7986bc5b66206b55cca93cb72c9bf15ccaa\&quot;,       \&quot;created_at\&quot;: \&quot;2022-04-26T19:29:04.418669Z\&quot;,       \&quot;cog_version\&quot;: \&quot;0.3.0\&quot;,       \&quot;openapi_schema\&quot;: {...}     }   ] } &#x60;&#x60;&#x60; 
  # @param model_owner The name of the user or organization that owns the model. 
  # @param model_name The name of the model. 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'models_versions_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for predictions_cancel
  # Cancel a prediction
  # @param prediction_id The ID of the prediction to cancel. 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'predictions_cancel test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for predictions_create
  # Create a prediction
  # Start a new prediction for the model version and inputs you provide.  Example request body:  &#x60;&#x60;&#x60;json {   \&quot;version\&quot;: \&quot;5c7d5dc6dd8bf75c1acaa8565735e7986bc5b66206b55cca93cb72c9bf15ccaa\&quot;,   \&quot;input\&quot;: {     \&quot;text\&quot;: \&quot;Alice\&quot;   } } &#x60;&#x60;&#x60;  Example cURL request:  &#x60;&#x60;&#x60;console curl -s -X POST \\   -d &#39;{\&quot;version\&quot;: \&quot;5c7d5dc6dd8bf75c1acaa8565735e7986bc5b66206b55cca93cb72c9bf15ccaa\&quot;, \&quot;input\&quot;: {\&quot;text\&quot;: \&quot;Alice\&quot;}}&#39; \\   -H \&quot;Authorization: Token &lt;paste-your-token-here&gt;\&quot; \\   -H &#39;Content-Type: application/json&#39; \\   https://api.replicate.com/v1/predictions &#x60;&#x60;&#x60;  The response will be the prediction object:  &#x60;&#x60;&#x60;json {   \&quot;id\&quot;: \&quot;gm3qorzdhgbfurvjtvhg6dckhu\&quot;,   \&quot;model\&quot;: \&quot;replicate/hello-world\&quot;,   \&quot;version\&quot;: \&quot;5c7d5dc6dd8bf75c1acaa8565735e7986bc5b66206b55cca93cb72c9bf15ccaa\&quot;,   \&quot;input\&quot;: {     \&quot;text\&quot;: \&quot;Alice\&quot;   },   \&quot;logs\&quot;: \&quot;\&quot;,   \&quot;error\&quot;: null,   \&quot;status\&quot;: \&quot;starting\&quot;,   \&quot;created_at\&quot;: \&quot;2023-09-08T16:19:34.765994657Z\&quot;,   \&quot;urls\&quot;: {     \&quot;cancel\&quot;: \&quot;https://api.replicate.com/v1/predictions/gm3qorzdhgbfurvjtvhg6dckhu/cancel\&quot;,     \&quot;get\&quot;: \&quot;https://api.replicate.com/v1/predictions/gm3qorzdhgbfurvjtvhg6dckhu\&quot;   } } &#x60;&#x60;&#x60;  As models can take several seconds or more to run, the output will not be available immediately. To get the final result of the prediction you should either provide a &#x60;webhook&#x60; HTTPS URL for us to call when the results are ready, or poll the [get a prediction](#predictions.get) endpoint until it has finished.  Input and output (including any files) will be automatically deleted after an hour, so you must save a copy of any files in the output if you&#39;d like to continue using them.  Output files are served by &#x60;replicate.delivery&#x60; and its subdomains. If you use an allow list of external domains for your assets, add &#x60;replicate.delivery&#x60; and &#x60;*.replicate.delivery&#x60; to it. 
  # @param [Hash] opts the optional parameters
  # @option opts [PredictionsCreateRequest] :predictions_create_request 
  # @return [ApiResponse]
  describe 'predictions_create test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for predictions_get
  # Get a prediction
  # Get the current state of a prediction.  Example cURL request:  &#x60;&#x60;&#x60;console curl -s \\   -H \&quot;Authorization: Token &lt;paste-your-token-here&gt;\&quot; \\   https://api.replicate.com/v1/predictions/gm3qorzdhgbfurvjtvhg6dckhu &#x60;&#x60;&#x60;  The response will be the prediction object:  &#x60;&#x60;&#x60;json {   \&quot;id\&quot;: \&quot;gm3qorzdhgbfurvjtvhg6dckhu\&quot;,   \&quot;model\&quot;: \&quot;replicate/hello-world\&quot;,   \&quot;version\&quot;: \&quot;5c7d5dc6dd8bf75c1acaa8565735e7986bc5b66206b55cca93cb72c9bf15ccaa\&quot;,   \&quot;input\&quot;: {     \&quot;text\&quot;: \&quot;Alice\&quot;   },   \&quot;logs\&quot;: \&quot;\&quot;,   \&quot;output\&quot;: \&quot;hello Alice\&quot;,   \&quot;error\&quot;: null,   \&quot;status\&quot;: \&quot;succeeded\&quot;,   \&quot;created_at\&quot;: \&quot;2023-09-08T16:19:34.765994Z\&quot;,   \&quot;started_at\&quot;: \&quot;2023-09-08T16:19:34.779176Z\&quot;,   \&quot;completed_at\&quot;: \&quot;2023-09-08T16:19:34.791859Z\&quot;,   \&quot;metrics\&quot;: {     \&quot;predict_time\&quot;: 0.012683   },   \&quot;urls\&quot;: {     \&quot;cancel\&quot;: \&quot;https://api.replicate.com/v1/predictions/gm3qorzdhgbfurvjtvhg6dckhu/cancel\&quot;,     \&quot;get\&quot;: \&quot;https://api.replicate.com/v1/predictions/gm3qorzdhgbfurvjtvhg6dckhu\&quot;   } } &#x60;&#x60;&#x60;  &#x60;status&#x60; will be one of:  - &#x60;starting&#x60;: the prediction is starting up. If this status lasts longer than a few seconds, then it&#39;s typically because a new worker is being started to run the prediction. - &#x60;processing&#x60;: the &#x60;predict()&#x60; method of the model is currently running. - &#x60;succeeded&#x60;: the prediction completed successfully. - &#x60;failed&#x60;: the prediction encountered an error during processing. - &#x60;canceled&#x60;: the prediction was canceled by its creator.  In the case of success, &#x60;output&#x60; will be an object containing the output of the model. Any files will be represented as HTTPS URLs. You&#39;ll need to pass the &#x60;Authorization&#x60; header to request them.  In the case of failure, &#x60;error&#x60; will contain the error encountered during the prediction.  Terminated predictions (with a status of &#x60;succeeded&#x60;, &#x60;failed&#x60;, or &#x60;canceled&#x60;) will include a &#x60;metrics&#x60; object with a &#x60;predict_time&#x60; property showing the amount of CPU or GPU time, in seconds, that the prediction used while running. It won&#39;t include time waiting for the prediction to start.  Input and output (including any files) are automatically deleted after an hour, so you must save a copy of any files in the output if you&#39;d like to continue using them.  Output files are served by &#x60;replicate.delivery&#x60; and its subdomains. If you use an allow list of external domains for your assets, add &#x60;replicate.delivery&#x60; and &#x60;*.replicate.delivery&#x60; to it. 
  # @param prediction_id The ID of the prediction to get. 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'predictions_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for predictions_list
  # List predictions
  # Get a paginated list of predictions that you&#39;ve created. This will include predictions created from the API and the website. It will return 100 records per page.  Example cURL request:  &#x60;&#x60;&#x60;console curl -s \\   -H \&quot;Authorization: Token &lt;paste-your-token-here&gt;\&quot; \\   https://api.replicate.com/v1/predictions &#x60;&#x60;&#x60;  The response will be a paginated JSON array of prediction objects, sorted with the most recent prediction first:  &#x60;&#x60;&#x60;json {   \&quot;next\&quot;: null,   \&quot;previous\&quot;: null,   \&quot;results\&quot;: [     {       \&quot;completed_at\&quot;: \&quot;2023-09-08T16:19:34.791859Z\&quot;,       \&quot;created_at\&quot;: \&quot;2023-09-08T16:19:34.907244Z\&quot;,       \&quot;error\&quot;: null,       \&quot;id\&quot;: \&quot;gm3qorzdhgbfurvjtvhg6dckhu\&quot;,       \&quot;input\&quot;: {         \&quot;text\&quot;: \&quot;Alice\&quot;       },       \&quot;metrics\&quot;: {         \&quot;predict_time\&quot;: 0.012683       },       \&quot;output\&quot;: \&quot;hello Alice\&quot;,       \&quot;started_at\&quot;: \&quot;2023-09-08T16:19:34.779176Z\&quot;,       \&quot;source\&quot;: \&quot;api\&quot;,       \&quot;status\&quot;: \&quot;succeeded\&quot;,       \&quot;urls\&quot;: {         \&quot;get\&quot;: \&quot;https://api.replicate.com/v1/predictions/gm3qorzdhgbfurvjtvhg6dckhu\&quot;,         \&quot;cancel\&quot;: \&quot;https://api.replicate.com/v1/predictions/gm3qorzdhgbfurvjtvhg6dckhu/cancel\&quot;       },       \&quot;model\&quot;: \&quot;replicate/hello-world\&quot;,       \&quot;version\&quot;: \&quot;5c7d5dc6dd8bf75c1acaa8565735e7986bc5b66206b55cca93cb72c9bf15ccaa\&quot;,     }   ] } &#x60;&#x60;&#x60;  &#x60;id&#x60; will be the unique ID of the prediction.  &#x60;source&#x60; will indicate how the prediction was created. Possible values are &#x60;web&#x60; or &#x60;api&#x60;.  &#x60;status&#x60; will be the status of the prediction. Refer to [get a single prediction](#predictions.get) for possible values.  &#x60;urls&#x60; will be a convenience object that can be used to construct new API requests for the given prediction.  &#x60;model&#x60; will be the model identifier string in the format of &#x60;{model_owner}/{model_name}&#x60;.  &#x60;version&#x60; will be the unique ID of model version used to create the prediction. 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'predictions_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for trainings_cancel
  # Cancel a training
  # @param training_id The ID of the training you want to cancel. 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'trainings_cancel test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for trainings_create
  # Create a training
  # Start a new training of the model version you specify.  Example request body:  &#x60;&#x60;&#x60;json {   \&quot;destination\&quot;: \&quot;{new_owner}/{new_name}\&quot;,   \&quot;input\&quot;: {     \&quot;train_data\&quot;: \&quot;https://example.com/my-input-images.zip\&quot;,   },   \&quot;webhook\&quot;: \&quot;https://example.com/my-webhook\&quot;, } &#x60;&#x60;&#x60;  Example cURL request:  &#x60;&#x60;&#x60;console curl -s -X POST \\   -d &#39;{\&quot;destination\&quot;: \&quot;{new_owner}/{new_name}\&quot;, \&quot;input\&quot;: {\&quot;input_images\&quot;: \&quot;https://example.com/my-input-images.zip\&quot;}}&#39; \\   -H \&quot;Authorization: Token &lt;paste-your-token-here&gt;\&quot; \\   -H &#39;Content-Type: application/json&#39; \\   https://api.replicate.com/v1/models/stability-ai/sdxl/versions/da77bc59ee60423279fd632efb4795ab731d9e3ca9705ef3341091fb989b7eaf/trainings &#x60;&#x60;&#x60;  The response will be the training object:  &#x60;&#x60;&#x60;json {   \&quot;id\&quot;: \&quot;zz4ibbonubfz7carwiefibzgga\&quot;,   \&quot;model\&quot;: \&quot;stability-ai/sdxl\&quot;,   \&quot;version\&quot;: \&quot;da77bc59ee60423279fd632efb4795ab731d9e3ca9705ef3341091fb989b7eaf\&quot;,   \&quot;input\&quot;: {     \&quot;input_images\&quot;: \&quot;https://example.com/my-input-images.zip\&quot;   },   \&quot;logs\&quot;: \&quot;\&quot;,   \&quot;error\&quot;: null,   \&quot;status\&quot;: \&quot;starting\&quot;,   \&quot;created_at\&quot;: \&quot;2023-09-08T16:32:56.990893084Z\&quot;,   \&quot;urls\&quot;: {     \&quot;cancel\&quot;: \&quot;https://api.replicate.com/v1/predictions/zz4ibbonubfz7carwiefibzgga/cancel\&quot;,     \&quot;get\&quot;: \&quot;https://api.replicate.com/v1/predictions/zz4ibbonubfz7carwiefibzgga\&quot;   } } &#x60;&#x60;&#x60;  As models can take several minutes or more to train, the result will not be available immediately. To get the final result of the training you should either provide a &#x60;webhook&#x60; HTTPS URL for us to call when the results are ready, or poll the [get a training](#trainings.get) endpoint until it has finished.  When a training completes, it creates a new [version](https://replicate.com/docs/how-does-replicate-work#terminology) of the model at the specified destination.  To find some models to train on, check out the [trainable language models collection](https://replicate.com/collections/trainable-language-models). 
  # @param model_owner The name of the user or organization that owns the model. 
  # @param model_name The name of the model. 
  # @param version_id The ID of the version. 
  # @param [Hash] opts the optional parameters
  # @option opts [TrainingsCreateRequest] :trainings_create_request 
  # @return [ApiResponse]
  describe 'trainings_create test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for trainings_get
  # Get a training
  # Get the current state of a training.  Example cURL request:  &#x60;&#x60;&#x60;console curl -s \\   -H \&quot;Authorization: Token &lt;paste-your-token-here&gt;\&quot; \\   https://api.replicate.com/v1/trainings/zz4ibbonubfz7carwiefibzgga &#x60;&#x60;&#x60;  The response will be the training object:  &#x60;&#x60;&#x60;json {   \&quot;completed_at\&quot;: \&quot;2023-09-08T16:41:19.826523Z\&quot;,   \&quot;created_at\&quot;: \&quot;2023-09-08T16:32:57.018467Z\&quot;,   \&quot;error\&quot;: null,   \&quot;id\&quot;: \&quot;zz4ibbonubfz7carwiefibzgga\&quot;,   \&quot;input\&quot;: {     \&quot;input_images\&quot;: \&quot;https://example.com/my-input-images.zip\&quot;   },   \&quot;logs\&quot;: \&quot;...\&quot;,   \&quot;metrics\&quot;: {     \&quot;predict_time\&quot;: 502.713876   },   \&quot;output\&quot;: {     \&quot;version\&quot;: \&quot;...\&quot;,     \&quot;weights\&quot;: \&quot;...\&quot;   },   \&quot;started_at\&quot;: \&quot;2023-09-08T16:32:57.112647Z\&quot;,   \&quot;status\&quot;: \&quot;succeeded\&quot;,   \&quot;urls\&quot;: {     \&quot;get\&quot;: \&quot;https://api.replicate.com/v1/trainings/zz4ibbonubfz7carwiefibzgga\&quot;,     \&quot;cancel\&quot;: \&quot;https://api.replicate.com/v1/trainings/zz4ibbonubfz7carwiefibzgga/cancel\&quot;   },   \&quot;model\&quot;: \&quot;stability-ai/sdxl\&quot;,   \&quot;version\&quot;: \&quot;da77bc59ee60423279fd632efb4795ab731d9e3ca9705ef3341091fb989b7eaf\&quot;, } &#x60;&#x60;&#x60;  &#x60;status&#x60; will be one of:  - &#x60;starting&#x60;: the training is starting up. If this status lasts longer than a few seconds, then it&#39;s typically because a new worker is being started to run the training. - &#x60;processing&#x60;: the &#x60;train()&#x60; method of the model is currently running. - &#x60;succeeded&#x60;: the training completed successfully. - &#x60;failed&#x60;: the training encountered an error during processing. - &#x60;canceled&#x60;: the training was canceled by its creator.  In the case of success, &#x60;output&#x60; will be an object containing the output of the model. Any files will be represented as HTTPS URLs. You&#39;ll need to pass the &#x60;Authorization&#x60; header to request them.  In the case of failure, &#x60;error&#x60; will contain the error encountered during the training.  Terminated trainings (with a status of &#x60;succeeded&#x60;, &#x60;failed&#x60;, or &#x60;canceled&#x60;) will include a &#x60;metrics&#x60; object with a &#x60;predict_time&#x60; property showing the amount of CPU or GPU time, in seconds, that the training used while running. It won&#39;t include time waiting for the training to start. 
  # @param training_id The ID of the training to get. 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'trainings_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for trainings_list
  # List trainings
  # Get a paginated list of trainings that you&#39;ve created. This will include trainings created from the API and the website. It will return 100 records per page.  Example cURL request:  &#x60;&#x60;&#x60;console curl -s \\   -H \&quot;Authorization: Token &lt;paste-your-token-here&gt;\&quot; \\   https://api.replicate.com/v1/trainings &#x60;&#x60;&#x60;  The response will be a paginated JSON array of training objects, sorted with the most recent training first:  &#x60;&#x60;&#x60;json {   \&quot;next\&quot;: null,   \&quot;previous\&quot;: null,   \&quot;results\&quot;: [     {       \&quot;completed_at\&quot;: \&quot;2023-09-08T16:41:19.826523Z\&quot;,       \&quot;created_at\&quot;: \&quot;2023-09-08T16:32:57.018467Z\&quot;,       \&quot;error\&quot;: null,       \&quot;id\&quot;: \&quot;zz4ibbonubfz7carwiefibzgga\&quot;,       \&quot;input\&quot;: {         \&quot;input_images\&quot;: \&quot;https://example.com/my-input-images.zip\&quot;       },       \&quot;metrics\&quot;: {         \&quot;predict_time\&quot;: 502.713876       },       \&quot;output\&quot;: {         \&quot;version\&quot;: \&quot;...\&quot;,         \&quot;weights\&quot;: \&quot;...\&quot;       },       \&quot;started_at\&quot;: \&quot;2023-09-08T16:32:57.112647Z\&quot;,       \&quot;source\&quot;: \&quot;api\&quot;,       \&quot;status\&quot;: \&quot;succeeded\&quot;,       \&quot;urls\&quot;: {         \&quot;get\&quot;: \&quot;https://api.replicate.com/v1/trainings/zz4ibbonubfz7carwiefibzgga\&quot;,         \&quot;cancel\&quot;: \&quot;https://api.replicate.com/v1/trainings/zz4ibbonubfz7carwiefibzgga/cancel\&quot;       },       \&quot;model\&quot;: \&quot;stability-ai/sdxl\&quot;,       \&quot;version\&quot;: \&quot;da77bc59ee60423279fd632efb4795ab731d9e3ca9705ef3341091fb989b7eaf\&quot;,     }   ] } &#x60;&#x60;&#x60;  &#x60;id&#x60; will be the unique ID of the training.  &#x60;source&#x60; will indicate how the training was created. Possible values are &#x60;web&#x60; or &#x60;api&#x60;.  &#x60;status&#x60; will be the status of the training. Refer to [get a single training](#trainings.get) for possible values.  &#x60;urls&#x60; will be a convenience object that can be used to construct new API requests for the given training.  &#x60;version&#x60; will be the unique ID of model version used to create the training. 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'trainings_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
